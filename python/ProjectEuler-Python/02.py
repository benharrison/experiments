# Even Fibonacci numbers
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

MAX = 4000000

evenTotal = 0

# initialize fibonacci sequence
fibonacciPrevious = 1
fibonacciCurrent = 2

while fibonacciCurrent < MAX:
    if fibonacciCurrent % 2 == 0:
        # print(fibonacciCurrent)
        evenTotal = evenTotal + fibonacciCurrent

    # calculate next number in fibonacci sequence
    fibonacciNext = fibonacciPrevious + fibonacciCurrent

    # re-assign previous and current values
    fibonacciPrevious = fibonacciCurrent
    fibonacciCurrent = fibonacciNext

# Answer: 4613732
print('The sum of odd fibonacci numbers below 4 million is {}'.format(evenTotal))
